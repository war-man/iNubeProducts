import React from "react";
import PropTypes from "prop-types";
//import { connect } from 'react-redux';
// @material-ui/core components
import withStyles from "@material-ui/core/styles/withStyles";
import InputAdornment from "@material-ui/core/InputAdornment";
import Icon from "@material-ui/core/Icon";

// @material-ui/icons
import Face from "@material-ui/icons/Face";
//import Email from "@material-ui/icons/Email";
// import LockOutline from "@material-ui/icons/LockOutline";

// core components
import GridContainer from "components/Grid/GridContainer.jsx";
import GridItem from "components/Grid/GridItem.jsx";
import CustomInput from "components/CustomInput/CustomInput.jsx";
import Button from "components/CustomButtons/Button.jsx";
import Card from "components/Card/Card.jsx";
import CardBody from "components/Card/CardBody.jsx";
import CardHeader from "components/Card/CardHeader.jsx";
import CardFooter from "components/Card/CardFooter.jsx";
import Checkbox from "@material-ui/core/Checkbox";
import FormControlLabel from "@material-ui/core/FormControlLabel";
import Check from "@material-ui/icons/Check";
//import Clear from "@material-ui/icons/Clear";
//import Radio from "@material-ui/core/Radio";
////import MailOutline from "@material-ui/icons/MailOutline";
import LoginConfig from 'modules/Login/LoginConfig.js';
import Dropdown from "components/Dropdown/Dropdown.jsx";

import swal from 'sweetalert';

import loginPageStyle from "assets/jss/material-dashboard-pro-react/views/loginPageStyle.jsx";
import $ from 'jquery'
import { Redirect } from 'react-router-dom'
//import swal from 'sweetalert';

//import { userActions } from "../_actions";

//(function () {
//    const passwordField = document.getElementById("password-input");
//    const errorField = document.getElementById("password-caps-warning");

//    window.onload = function (event) {
//        var keyevent = event.getModifierState("CapsLock");
//        if (keyevent) {
//            errorField.classList.remove("d-none");
//        } else {
//            errorField.classList.add("d-none");
//        }
//    }
//}());
const image = '';

class PasswordPage extends React.Component {
    constructor(props) {
        super(props);
        // we use this to make the card to appear after the page has been rendered
        this.state = {
            //cardAnimaton: "cardHidden"
            checked: [24, 22],
            count: 0,
            show: true,
            logincount: "",
            selectedValue: null,
            isvalid: false,
            redirectto: false,
            selectedEnabled: "b",
            redirect: false,
            UserName: '',
            PassWord: '',
            userId: "",
            RoleId: "",
            usrId: "",
            UserName: "",
            loginuserid: "",
            servertype: "",
            loginroleid: "",
            attemptFlag: false,
            loginDTO: {
                Username: "",
                Password: "",
                ProductType: "",
                //ServerType: "",
                envId: ""
            },
            errormessage: "",
            capslock: false,
            logintoken: "",
            environment: [],
            redirecttoback: false,
            redirecttofirst: false,
            environmentvalue: "",
            dropdownDisplay: true,
            firsttimelogin: "",
        };
        this.changeEvent = this.changeEvent.bind(this);
        this.handleToggle = this.handleToggle.bind(this);
        this.handleChange = this.handleChange.bind(this);
        this.handleSubmit = this.handleSubmit.bind(this);
        this.handleBack = this.handleBack.bind(this);
        this.handleforgot = this.handleforgot.bind(this);
        this.capsFunction = this.capsFunction.bind(this);
    }

    renderRedirect = () => {
        if (this.state.redirect == true) {
            return <Redirect to={{
                pathname: '/dashboard/home',
                state: {
                    loginuserid: this.state.loginuserid,
                    loginroleid: this.state.loginroleid,
                    logintoken: this.state.logintoken,
                },
            }} />
        } else if (this.state.redirecttoback == true) {
            return <Redirect to={{
                pathname: '/pages/login-page',
            }} />
        }
        else if (this.state.redirecttofirst == true) {
            return <Redirect to={{
                pathname: '/pages/FirstTimeLogin',
                state: {
                    environmentvalue: this.state.environmentvalue,
                    UserName: this.state.UserName,
                    environment: this.state.environment,
                }
            }} />
        }
        else { }
    }

    getEnviData = e => {

        this.setState({ [e.target.name]: e.target.value });
        console.log("login: ", e.target.value);
        console.log("environmentvalue: ", this.state.environmentvalue);
    }

    handleChange({ target }) {
        this.setState({
            [target.name]: target.value
        });
        if (this.state.loginDTO.Password != "" || this.state.loginDTO.Username != "") {
            this.setState({ errormessage: false });
            //this.state.errormessage = false;
        }
    }

    renderRedirectpassword = () => {
        if (this.state.redirectto == true) {
            return <Redirect to={{
                pathname: '/pages/RecoverPassword',
                state: {
                    userId: this.state.userId,
                    UserName: this.state.UserName,
                    environmentvalue: this.state.environmentvalue,
                    environment: this.state.environment,
                },
            }} />
        }
    }

    capsFunction(event) {
        if (event.keyCode == 20) {
            console.log("capslock");
            this.setState({ capslock: !this.state.capslock });
        }
    }

    handleToggle(value) {
        const { checked } = this.state;
        const currentIndex = checked.indexOf(value);
        const newChecked = [...checked];

        if (currentIndex === -1) {
            newChecked.push(value);
        } else {
            newChecked.splice(currentIndex, 1);
        }
        this.setState({
            checked: newChecked
        });
    }

    handleBack() {
        //console.log("go back to login page");
        this.setState({ redirecttoback: true });
    }

    handleforgot() {
        if (this.state.environmentvalue == "" || this.state.environmentvalue == undefined) {
            swal({
                text: "Please select the server type",
                icon: "error"
            });
        } else {
            this.setState({ redirectto: true })
        }
    }

    handleSubmit(e) {
        e.preventDefault();
        const that = this;
        this.setState({ submitted: true });
        const { UserName, PassWord } = this.state;
        //const { dispatch } = this.props;

        let UserState = this.state.loginDTO;
        UserState['Username'] = UserName;
        UserState['Password'] = PassWord;
        UserState['ProductType'] = LoginConfig.ProductType;
        //UserState['ServerType'] = this.props.location.state.servertype;
        UserState['envId'] = this.state.environmentvalue;
        this.setState({ UserState });

        console.log("userstate: ", UserState)
        fetch(`${LoginConfig.LoginUrl}/api/Login/Authenticate`, {
            //fetch('https://localhost:44367/api/Login/Authenticate', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json; charset=utf-8',
                'Accept': 'application/json'
            },
            body: JSON.stringify(UserState),
        }).then(response => {
            console.log("response: ", response);
            return response.json()
        })
            .then((data) => {
                console.log("response data", data);
                if (data.status == 1) {
                    that.setState({
                        loginuserid: data.userId,
                        loginroleid: data.roleId,
                        attemptFlag: false,
                        logintoken: data.token,
                        firsttimelogin: data.firstTimeLogin,
                    });
                    if (data.firstTimeLogin != 0) {
                        this.setState({ redirect: true });
                    } else {
                        this.setState({ redirecttofirst: true });
                    }
                    //that.setState({ redirect: true });

                    //console.log("rid: ", this.state.rid);
                    //console.log("partnerid: ", data.partnerId);
                    localStorage.setItem('partnerid', data.partnerId);
                    localStorage.setItem('userId', data.userId);
                    localStorage.setItem('roleId', data.roleId);
                    localStorage.setItem('userName', data.userName);
                    localStorage.setItem('firstName', data.firstName);
                    localStorage.setItem('displayName', data.displayName);
                    localStorage.setItem('userToken', data.token);
                    localStorage.setItem('locale', 'en_US');
                    localStorage.setItem('partnerId', data.partnerId);
                    localStorage.setItem('organizationId', data.organizationId);

                    if (data.profileImage == "" || data.profileImage == null || data.profileImage == undefined) {
                        localStorage.setItem('profilepicture', image);
                        //console.log("Profile image: ", localStorage.getItem('profilepicture'));
                    }
                    else {
                        localStorage.setItem('profilepicture', data.profileImage);
                        //console.log("Profile image: ", localStorage.getItem('profilepicture'));
                    }
                }
                else {
                    that.setState({ count: that.state.count + 1 });
                    //console.log('count:', that.state.count);
                    that.setState({ redirect: false, attemptFlag: true, errormessage: true })
                }
            });
    }

    componentDidMount() {
        document.addEventListener("keydown", this.capsFunction, false);

        // we add a hidden class to the card and after 700 ms we delete it and the transition appears
        this.timeOutFunction = setTimeout(
            function () {
                this.setState({ cardAnimaton: "" });
            }.bind(this),
            900
        );
        if (this.props.location.state != null) {
            this.setState({
                UserName: this.props.location.state.UName,
                userId: this.props.location.state.userId,
                environment: this.props.location.state.environment,
            });
        }
        else {
            //console.log("no user name");
        }
        //console.log("length: ", this.props.location.state.environment.length);
        //console.log("mID: ", this.props.location.state.environment[0].mID);
        if (this.props.location.state.environmentvalue == "" || this.props.location.state.environmentvalue == undefined) {
            if (this.props.location.state.environment.length == 1) {
                this.setState({ environmentvalue: this.props.location.state.environment[0].mID, dropdownDisplay: false });
            }
        } else {
            this.setState({ environmentvalue: this.props.location.state.environmentvalue });
        }
        this.state.servertype = this.props.location.state.servertype;
        this.setState({});
        console.log("servertype: ", this.state.servertype);
        console.log("servertype1: ", this.props.location.state.servertype);
    }

    componentWillUnmount() {

        document.removeEventListener("keydown", this.capsFunction, false);

        clearTimeout(this.timeOutFunction);
        this.timeOutFunction = null;
    }

    changeEvent() {
        //console.log('text box change event fired');
    }

    render() {
        const { classes, loggingIn } = this.props;
        const { UserName, Password, submitted, attemptFlag, isLoading, redirect } = this.state;
        return (
            <div className={classes.container}>
                <GridContainer justify="center">
                    <GridItem xs={12} sm={6} md={4}>
                        <form onSubmit={this.handleSubmit}>
                            <Card login className={classes[this.state.cardAnimaton]}>
                                <CardHeader id="padding-bottom"
                                    className={`${classes.cardHeader} ${classes.textCenter}`}
                                    color="rose">
                                    <h4 className={classes.cardTitle}>Log in</h4>
                                    <div className={classes.socialLine}>
                                        {[

                                        ].map((prop, key) => {
                                            return (
                                                <Button
                                                    color="transparent"
                                                    justIcon
                                                    key={key}
                                                    className={classes.customButtonClass}
                                                >
                                                    <i className={prop} />
                                                </Button>
                                            );
                                        })}
                                    </div>
                                </CardHeader>
                                <CardBody>
                                    <CustomInput
                                        required={true}
                                        labelText="User Name"
                                        id="UserName"
                                        name="UserName"
                                        value={this.state.UserName}
                                        onChange={this.handleChange}
                                        formControlProps={{
                                            fullWidth: true
                                        }}

                                        inputProps={{
                                            endAdornment: (
                                                <InputAdornment position="end">
                                                    <Face className={classes.inputAdornmentIcon} />
                                                </InputAdornment>
                                            )
                                            //placeholder: "UserName"
                                        }}
                                    />
                                    <CustomInput
                                        required={true}
                                        labelText="Password"
                                        id="password-input"
                                        name="PassWord"
                                        formControlProps={{
                                            fullWidth: true
                                        }}
                                        onChange={this.handleChange}
                                        inputProps={{
                                            type: "Password",
                                            endAdornment: (
                                                <InputAdornment position="end">
                                                    <Icon className={classes.inputAdornmentIcon} >
                                                        lock_outline </Icon>
                                                </InputAdornment>
                                            )
                                            //placeholder: "UserName"
                                        }}
                                    />
                                    {this.state.capslock ? <p id="password-caps-warning" >Warning: Caps lock is on</p> : null}
                                    {this.state.errormessage ? <p className="error">*Invalid Password</p> : null}
                                    {attemptFlag == true &&
                                        <div className="help-block"> <h5>Failed attempts : {this.state.count}</h5>  </div>
                                    }
                                    {this.state.dropdownDisplay ?
                                        <Dropdown
                                            required={true}
                                            labelText="Environment Type"
                                            lstObject={this.state.environment}
                                            value={this.state.environmentvalue}
                                            name="environmentvalue"
                                            onChange={(e) => this.getEnviData(e)}
                                            formControlProps={{ fullWidth: true }}
                                        />
                                        : null}
                                    <GridContainer>
                                        {this.renderRedirectpassword()}
                                        <Button id="text-captalize" color="rose" simple size="sm" onClick={this.handleforgot} >
                                            Forgot Password?
                                        </Button>
                                    </GridContainer>
                                    {/*  <FormControlLabel
                                        classes={{
                                            root: classes.checkboxLabelControl,
                                            label: classes.checkboxLabel
                                        }}
                                        control={
                                            <Checkbox
                                                tabIndex={-1}
                                                onClick={() => this.handleToggle(1)}
                                                checkedIcon={
                                                    <Check className={classes.checkedIcon} />
                                                }
                                                icon={<Check className={classes.uncheckedIcon} />}
                                                classes={{
                                                    checked: classes.checked,
                                                    root: classes.checkRoot
                                                }}
                                            />
                                        }

                                        label={
                                            <span>
                                                Remember me{" "}

                                            </span>
                                        }
                                    />*/}

                                    <div class="g-recaptcha" data-sitekey="6LedoYwUAAAAAAsVnCC8nb24PnjTV_jQ-TvZ348q"></div>
                                </CardBody>
                                <CardFooter className={classes.justifyContentCenter}>
                                    <div>

                                        <Button color="rose" simple size="lg" onClick={this.handleBack} >
                                            Back
                                        </Button>
                                    </div>
                                    <div>
                                        {this.renderRedirect()}
                                        <Button
                                            color="info" simple id="btnLogin" size="lg" block type="submit" >
                                            LOGIN
                                    </Button>
                                    </div>

                                </CardFooter>

                            </Card>
                        </form>
                    </GridItem>
                </GridContainer>
            </div>
        );
    }
}

PasswordPage.propTypes = {
    classes: PropTypes.object.isRequired
};

export default withStyles(loginPageStyle)(PasswordPage);